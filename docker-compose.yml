version: '3.7'
services:
  nginx-web:
    image: nginx
    labels:
        com.github.jrcs.letsencrypt_nginx_proxy_companion.nginx_proxy: "true"
    container_name: nginx-web
    ports:
      - "0.0.0.0:80:80"
      - "0.0.0.0:443:443"
    volumes:
      - ./config/nginx/conf.d:/etc/nginx/conf.d
      - ./config/nginx/vhost.d:/etc/nginx/vhost.d
      - ./config/nginx/html:/usr/share/nginx/html
      - ./config/nginx/certs:/etc/nginx/certs:ro
      - ./config/nginx/htpasswd:/etc/nginx/htpasswd:ro
    logging:
      driver: json-file
      options:
        max-size: "4m"
        max-file: "10"


  docker-gen:
    image: jwilder/docker-gen
    command: -notify-sighup nginx-web -watch -wait 5s:30s /etc/docker-gen/templates/nginx.tmpl /etc/nginx/conf.d/default.conf
    container_name: docker-gen
    volumes:
      - ./config/nginx/conf.d:/etc/nginx/conf.d
      - ./config/nginx/vhost.d:/etc/nginx/vhost.d
      - ./config/nginx/html:/usr/share/nginx/html
      - ./config/nginx/certs:/etc/nginx/certs:ro
      - ./config/nginx/htpasswd:/etc/nginx/htpasswd:ro
      - ./config/templates/nginx.tmpl:/etc/docker-gen/templates/nginx.tmpl:ro
      - /var/run/docker.sock:/tmp/docker.sock:ro
    logging:
      driver: json-file
      options:
        max-size: "2m"
        max-file: "10"

  nginx-letsencrypt:
    image: jrcs/letsencrypt-nginx-proxy-companion
    container_name: nginx-letsencrypt
    restart: always
    volumes:
      - ./config/nginx/conf.d:/etc/nginx/conf.d
      - ./config/nginx/vhost.d:/etc/nginx/vhost.d
      - ./config/nginx/html:/usr/share/nginx/html
      - ./config/nginx/certs:/etc/nginx/certs:rw
      - /var/run/docker.sock:/var/run/docker.sock:ro
    environment:
      NGINX_DOCKER_GEN_CONTAINER: docker-gen
      NGINX_PROXY_CONTAINER: nginx-web
    logging:
      driver: json-file
      options:
        max-size: "2m"
        max-file: "10"

        #nginx-letsencrypt:
        #image: jrcs/letsencrypt-nginx-proxy-companion
        # container_name: nginx-letsencrypt
        #depends_on:
        #- docker-gen
        # volumes:
        # - ./config/nginx/conf.d:/etc/nginx/conf.d
        #- ./config/nginx/vhost.d:/etc/nginx/vhost.d
        #- ./config/nginx/html:/usr/share/nginx/html
        # - ./config/nginx/certs:/etc/nginx/certs:rw
        # - /var/run/docker.sock:/var/run/docker.sock:ro
        # environment:
        # NGINX_DOCKER_GEN_CONTAINER: docker-gen
      #   NGINX_PROXY_CONTAINER: nginx-web
      #logging:
            #driver: json-file
      #      options:
              #max-size: "2m"
        # max-file: "10"


  odoo:
    image: odoo:14.0
    depends_on:
      - db
    environment:
      - HOST=db
      - USER=odoo
      - PASSWORD=odoo
      - ODOO_RC=${ODOO_RC:-/etc/odoo/odoo.conf}
      - VIRTUAL_HOST=${VIRTUAL_HOST:-localhost}
      - VIRTUAL_PORT=${VIRTUAL_PORT:-8069}
      - LETSENCRYPT_HOST=${LETSENCRYPT_HOST:-}
      - LETSENCRYPT_EMAIL=${LETSENCRYPT_EMAIL:-daniel.nery@godoo.com.br}
    expose:
     - "8069"
     - "8071"
     - "8072"
    volumes:
      # Filestore
      - ./odoo-web-data:/var/lib/odoo/
      # Configration files
      - ./config/odoo:/etc/odoo
      # Addons 
      - ./addons:/mnt/extra-addons


  db:
    image: postgres:12.0
    container_name: postgresql
    environment:
      - POSTGRES_PASSWORD=odoo
      - POSTGRES_USER=odoo
      - POSTGRES_DB=postgres
      - PGDATA=/var/lib/postgresql/data/pgdata
    ports:
      - "127.0.0.1:9432:5432"
    volumes:
      - ./odoo-db-data:/var/lib/postgresql/data/pgdata

volumes:
  odoo-web-data:
  odoo-db-data:

networks:
  default:
    name: untittle-odoo-net
